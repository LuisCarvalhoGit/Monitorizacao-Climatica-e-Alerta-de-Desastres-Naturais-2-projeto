def criar_interface():



    def Recolherdados(event=None):

        nome = entry_nome.get()
        email = entry_email.get()

        cidade = entry_cidade.get()
        temp_unit = temp_unit_var.get()
        wind_speed_unit = wind_speed_unit_var.get()

        def show_time():
            current_time = time.strftime('%H:%M')  # changed from '%H:%M:%S' to '%H:%M'
            time_label.configure(text=current_time)


        def plot_data():
            # Fetch data from the database
            data = get_data_from_db()

            # Separate the data into different lists
            temp = [row[1] for row in data]
            temp_feels_like = [row[2] for row in data]
            pressão = [row[3] for row in data]
            wind_speed = [row[4] for row in data]
            humidade = [row[5] for row in data]
            quant_nuvens = [row[6] for row in data]

            # Set the style of the plots
            sns.set_style("whitegrid")

            # Create a figure and a set of subplots
            fig, axs = plt.subplots(5, 1, figsize=(10, 20))

            # Plot the data
            axs[0].plot(temp, color='blue')
            axs[0].set_title('Temperatura')
            axs[0].set_ylabel('Temperatura (ºC)')

            axs[1].plot(temp_feels_like, color='orange')
            axs[1].set_title('Sensação Térmica')
            axs[1].set_ylabel('Temperatura (ºC)')

            axs[2].plot(quant_nuvens, color='purple')
            axs[2].set_title('Pressão')
            axs[2].set_ylabel('Pressão')


            axs[3].plot(wind_speed, color='green')
            axs[3].set_title('Velocidade do vento')
            axs[3].set_ylabel('Velocidade (m/s)')

            axs[4].plot(humidade, color='red')
            axs[4].set_title('Humidade')
            axs[4].set_ylabel('Humidade (%)')

            axs[5].plot(quant_nuvens, color='purple')
            axs[5].set_title('Quantidade média de nuvens')
            axs[5].set_ylabel('Quantidade de Nuvens (%)')

            # Set the title for the entire figure
            fig.suptitle('Weather Data over Time', fontsize=16)

            # Adjust the layout
            plt.tight_layout(rect=[0, 0, 1, 0.96])

            # Show the plot
            plt.show()





        # Check if the name is in the correct format (only letters and spaces)
        if not re.match("^[a-zA-Z ]+$", nome):
            error_message_label.configure(text="")
            error_message_label.configure(text="Nome inválido.\nPor favor insira apenas letras e espaços.")
            return

        # Check if the email is in the correct format
        if not re.match(r"[^@]+@[^@]+\.[^@]+", email):
            error_message_label.configure(text="")
            error_message_label.configure(text="Email inválido.\nPor favor insira um formato de email válido.")
            return

        # If the name and email are in the correct format, clear the error message and continue with the rest of the function
        error_message_label.configure(text="")


        root.iconify()

        weather_interface = ctk.CTkToplevel()
        weather_interface.geometry("600x400")
        weather_interface.resizable(False, False)
        weather_interface.title("Metereologia")
        weather_interface.configure(fg_color="#297CAA")


        sun_image_data = Image.open("images/sun.png")
        clouds_and_sun_image_data = Image.open("images/clouds_and_sun.png")
        clouds_image_data = Image.open("images/clouds.png")
        rain_image_data = Image.open("images/rain.png")
        storm_image_data = Image.open("images/storm.png")

        weather_data = get_weather_data("8ba62249b68f6b02f4cc69cae7495cb3", cidade, "metric")


        refresh_button_data = Image.open("images/refresh_icon.png")
        return_button_data = Image.open("images/voltar.png")
        graph_button_data = Image.open("images/bar-chart.png")

        cidade_label = ctk.CTkLabel(master=weather_interface,text=cidade,font=("Roboto Bold",18))
        cidade_label.pack(anchor="center")

        time_label = ctk.CTkLabel(master=weather_interface)
        time_label.place(x=10,y=70)

        ctk.CTkLabel(master=weather_interface,text="Metereologia Atual",font=("Roboto Bold",18)).place(x=10,y=50)

        ctk.CTkLabel(master=weather_interface,text=f"{weather_data['temp']}",font=("Montserrat",63)).place(x=90,y=100)
        ctk.CTkLabel(master=weather_interface,text="ºC",font=("Roboto",25)).place(x=160,y=110)

        refresh_button = ctk.CTkImage(dark_image=refresh_button_data, light_image=refresh_button_data,size=(20,20))
        return_button = ctk.CTkImage(dark_image=return_button_data, light_image=return_button_data,size=(20,20))
        graph_button = ctk.CTkImage(dark_image=graph_button_data, light_image=graph_button_data, size=(20, 20))

        button_retornar = ctk.CTkButton(master=weather_interface,text="",image=return_button, command=root.deiconify,bg_color="#79828c",fg_color="#1f89a1",width=30)
        button_retornar.place(x=10, y=10)

        button_refresh_page = ctk.CTkButton(master=weather_interface,text="",image=refresh_button,bg_color="#79828c",fg_color="#1f89a1",width=30)
        button_refresh_page.place(x=550,y=10)

        button_graph = ctk.CTkButton(master=weather_interface, text="",command=plot_data, image=graph_button, bg_color="#79828c", fg_color="#1f89a1", width=30)
        button_graph.place(x=50, y=10)



        label_vento = ctk.CTkLabel(master=weather_interface,text="Vento",font=("Roboto Bold",14))
        label_vento.place(x=20,y=200)

        label_humidade = ctk.CTkLabel(master=weather_interface,text="Humidade",font=("Roboto Bold",14))
        label_humidade.place(x=100,y=200)

        label_pressao = ctk.CTkLabel(master=weather_interface, text="Pressão", font=("Roboto Bold", 14))
        label_pressao.place(x=210, y=200)

        label_sensacao_termica = ctk.CTkLabel(master=weather_interface, text="Sensação térmica", font=("Roboto", 14))
        label_sensacao_termica.place(x=220,y=138)

        label_quant_nuvens = ctk.CTkLabel(master=weather_interface, text="Quantidade de Nuvens", font=("Roboto Bold", 14))
        label_quant_nuvens.place(x=320,y=200)

        #ctk.CTkLabel(master=weather_interface,text=f"Nome: {nome}\nEmail: {email}\nTemperatura:{temp_unit}\nVento:{wind_speed_unit}",bg_color="#297CAA").pack(padx=10,pady=10)

        sun_image = ctk.CTkLabel(master=weather_interface, text="",image=ctk.CTkImage(dark_image=clouds_and_sun_image_data,light_image=clouds_and_sun_image_data,size=(65,65)))
        sun_image.place(x=15,y=100)

        show_time()

        weather_interface.mainloop()

    


    ctk.set_appearance_mode("dark")
    ctk.set_default_color_theme("dark-blue")

    root = ctk.CTk()
    root.geometry("600x400")
    root.resizable(False, False)
    root.title("Formulário de Dados do Utilizador")

    # Create option menu widgets for the temperature and wind speed units
    temp_unit_options = ["ºC", "F"]
    wind_speed_unit_options = ["m/s", "km/h"]

    temp_unit_var = ctk.StringVar(value=temp_unit_options[0])  # default value
    wind_speed_unit_var = ctk.StringVar(value=wind_speed_unit_options[0])  # default value


    side_img_data = Image.open("images/side-img.png")

    side_img = ctk.CTkImage(dark_image=side_img_data, light_image=side_img_data, size=(300, 480))


    ctk.CTkLabel(master=root, text="", image=side_img).pack(expand=True, side="left")

    frame = ctk.CTkFrame(master=root, width=300, height=480, fg_color="#dcddde")
    frame.pack_propagate(False)
    frame.pack(expand=True, side="right")


    error_message_label = ctk.CTkLabel(master=frame, text="", text_color="red")
    error_message_label.pack(anchor="w", padx=(25, 0),pady=(20,0))

    ctk_label_nome = ctk.CTkLabel(master=frame, text ="Bem vindo!" ,font=("Roboto Bold",18),text_color="#296aa3", anchor='w', justify='left')
    ctk_label_nome.pack(anchor="w", pady=(20, 5), padx=(25, 0))

    ctk_label_desc = ctk.CTkLabel(master=frame, text="Insira os seus dados e preferências",text_color="#7E7E7E", anchor="w", justify="left", font=("Arial Bold", 15))
    ctk_label_desc.pack(anchor="w", padx=(25, 0))

    entry_nome = ctk.CTkEntry(master=frame, placeholder_text="O seu nome", width=225, placeholder_text_color='#757272',text_color="#303030",fg_color="#EEEEEE",border_color='#757272',border_width=2)
    #root.update()
    #entry_nome.focus_set()  # foca o cursor em "Nome" ao abrir
    entry_nome.pack(anchor="w", padx=(25, 0), pady=(10,0))


    entry_email = ctk.CTkEntry(master=frame, placeholder_text="Oseuemail@gmail.com", width=225, placeholder_text_color='#757272',text_color="#303030", fg_color="#EEEEEE", border_color='#757272', border_width=2)
    entry_email.pack(anchor="w", padx=(25, 0), pady=(10,0))

    temp_unit_option_menu = ctk.CTkOptionMenu(master=frame, variable=temp_unit_var, values=temp_unit_options,button_color="#1f89a1",fg_color="#1f89a1",font=("Roboto bold", 15),width=110)
    temp_unit_option_menu.place(y=250,x=25)

    wind_speed_unit_option_menu = ctk.CTkOptionMenu(master=frame, variable=wind_speed_unit_var, values=wind_speed_unit_options, button_color="#1f89a1",fg_color="#1f89a1",font=("Roboto bold", 15),width=110)
    wind_speed_unit_option_menu.place(y=250,x=140)

    entry_cidade = ctk.CTkEntry(master=frame, placeholder_text="Vila Real, PT",width=225,placeholder_text_color='#757272',text_color="#303030", fg_color="#EEEEEE",border_color='#757272', border_width=2)
    entry_cidade.place(x=25,y=215)

    submit_button = ctk.CTkButton(master=frame, text="Submeter", hover_color="#E44982", fg_color="#1f89a1", font=("Roboto bold", 15), width=225, command=Recolherdados)
    submit_button.place(x=25,y=290)



    root.bind('<Return>', Recolherdados)  # bind the Enter key to the Recolherdados function


    root.mainloop()
